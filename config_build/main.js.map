{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/athletics-page/athletics-page.component.css","webpack:///./src/app/athletics-page/athletics-page.component.html","webpack:///./src/app/athletics-page/athletics-page.component.ts","webpack:///./src/app/ddd-page/ddd-page.component.css","webpack:///./src/app/ddd-page/ddd-page.component.html","webpack:///./src/app/ddd-page/ddd-page.component.ts","webpack:///./src/app/dialogs/cancel-dialog.html","webpack:///./src/app/dialogs/dialogs.component.ts","webpack:///./src/app/dialogs/login-dialog.html","webpack:///./src/app/dialogs/logout-dialog.html","webpack:///./src/app/dialogs/publish-dialog.html","webpack:///./src/app/dialogs/spinner-dialog.html","webpack:///./src/app/event-page/event-page.component.css","webpack:///./src/app/event-page/event-page.component.html","webpack:///./src/app/event-page/event-page.component.ts","webpack:///./src/app/json-manager.service.ts","webpack:///./src/app/letter-page/letter-page.component.css","webpack:///./src/app/letter-page/letter-page.component.html","webpack:///./src/app/letter-page/letter-page.component.ts","webpack:///./src/app/schedule-page/schedule-page.component.css","webpack:///./src/app/schedule-page/schedule-page.component.html","webpack:///./src/app/schedule-page/schedule-page.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\r\\n<mat-toolbar color=\\\"primary\\\">\\r\\n  <mat-toolbar-row style=\\\"z-index:4;\\\" class=\\\"mat-elevation-z4\\\">\\r\\n    <img src=\\\"assets/pingry.png\\\" style=\\\"height:90%; margin-right: 20px\\\">\\r\\n    <span>Pingry API Configuration</span>\\r\\n    <button mat-raised-button style=\\\"color:#333; margin-left: 35px;\\\" (click)=\\\"logout()\\\">Logout&nbsp;&nbsp;&nbsp;<mat-icon>lock</mat-icon></button>\\r\\n    <div class=\\\"buttons-right\\\" style=\\\"position:absolute; right:0; margin-right:40px;\\\">\\r\\n      <button mat-raised-button style=\\\"color:#333\\\" [disabled]=\\\"!hasChanged()\\\" (click)=\\\"cancel()\\\">Discard&nbsp;&nbsp;&nbsp;<mat-icon>delete</mat-icon></button>\\r\\n      <div style=\\\"display:inline-block; width:25px;\\\"></div>\\r\\n      <button mat-raised-button color=\\\"accent\\\" [disabled]=\\\"!hasChanged()\\\" (click)=\\\"publish()\\\">Publish&nbsp;&nbsp;&nbsp;<mat-icon>publish</mat-icon></button>\\r\\n    </div>\\r\\n  </mat-toolbar-row>\\r\\n</mat-toolbar>\\r\\n<mat-sidenav-container style=\\\"height: calc(100vh - 64px)\\\">\\r\\n  <mat-sidenav mode=\\\"side\\\" opened=\\\"true\\\" disableClose class=\\\"mat-elevation-z4\\\">\\r\\n    <mat-list>\\r\\n      <mat-list-item routerLink=\\\"{{page.url}}\\\" routerLinkActive=\\\"active\\\" *ngFor=\\\"let page of pages\\\">{{page.title}}</mat-list-item>\\r\\n    </mat-list>\\r\\n  </mat-sidenav>\\r\\n  <div class=\\\"main-content\\\">\\r\\n    <router-outlet></router-outlet>\\r\\n  </div>\\r\\n</mat-sidenav-container>\\r\\n\"","import { Component } from '@angular/core';\r\nimport {JsonManagerService} from './json-manager.service';\r\nimport {MatDialog, MatDialogRef, MatSnackBar} from '@angular/material';\r\nimport {\r\n  PublishDialogComponent,\r\n  CancelDialogComponent,\r\n  LoginDialogComponent,\r\n  LogoutDialogComponent,\r\n  SpinnerDialogComponent\r\n} from './dialogs/dialogs.component';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'app';\r\n  pages = [\r\n    {title:\"Schedule\", url:\"/schedule\"},\r\n    {title:\"Letter Day\", url:\"/letter\"},\r\n    {title:\"Events\", url:\"/events\"},\r\n    {title:\"Dress Down Days\", url:\"/ddd\"},\r\n    {title:\"Athletic Cals\", url:\"/athletics\"}\r\n  ];\r\n\r\n  changed:boolean = false;\r\n\r\n  constructor(private manager:JsonManagerService, private dialog:MatDialog, private route: ActivatedRoute, private snackbar:MatSnackBar){\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    console.log(\"Initialized\");\r\n    this.manager.hasValidKey((valid)=> {\r\n      console.log(valid);\r\n      if(valid){\r\n        this.manager.refresh();\r\n      }else {\r\n        setTimeout(()=>this.getNewKey());\r\n      }\r\n    });\r\n  }\r\n\r\n  logout(){\r\n    let dialogRef = this.dialog.open(LogoutDialogComponent);\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if(result){\r\n        this.manager.json = {};\r\n        this.manager.apiKey = \"\";\r\n        this.manager.saveKey();\r\n        this.manager.refresh();\r\n        this.getNewKey();\r\n      }\r\n    });\r\n  }\r\n\r\n  getNewKey(){\r\n    let dialogRef = this.dialog.open(LoginDialogComponent, {\r\n      closeOnNavigation:false,\r\n      disableClose:true,\r\n      data:{validate: (key, cb) => this.manager.isValidKey(key, cb)}\r\n    });\r\n    dialogRef.afterClosed().subscribe(newKey => {\r\n      this.manager.apiKey = newKey;\r\n      this.manager.saveKey();\r\n      this.manager.refresh();\r\n    });\r\n  }\r\n\r\n  hasChanged():boolean{\r\n    return this.manager.changed;\r\n  }\r\n\r\n  publish() {\r\n    let dialogRef = this.dialog.open(PublishDialogComponent);\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if(result){\r\n        let d2 = this.dialog.open(SpinnerDialogComponent, {closeOnNavigation:false,disableClose:true, width:\"150px\", height:\"150px\"});\r\n        this.manager.saveJson((success) => {\r\n          d2.close();\r\n          if(success){\r\n            this.snackbar.open(\"JSON updated\", \"Close\", {duration:3000});\r\n            this.manager.refresh();\r\n          }else{\r\n            this.snackbar.open(\"Error updating JSON!\", \"Close\", {panelClass:\"snackbar-error\", duration:3000});\r\n          }\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  cancel(){\r\n    let dialogRef = this.dialog.open(CancelDialogComponent);\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if(result){\r\n        this.manager.refresh();\r\n      }\r\n    });\r\n  }\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\r\nimport {\r\n  MatButtonModule,\r\n  MatCheckboxModule,\r\n  MatToolbarModule,\r\n  MatSidenavModule,\r\n  MatListModule,\r\n  MatIconModule,\r\n  MatTableModule,\r\n  MatInputModule,\r\n  MatSelectModule,\r\n  MatNativeDateModule,\r\n  MatDatepickerModule,\r\n  MatSnackBarModule,\r\n  MatDialogModule,\r\n  MatProgressSpinnerModule\r\n} from '@angular/material';\r\nimport {FormsModule} from '@angular/forms';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { AthleticsPageComponent } from './athletics-page/athletics-page.component';\r\nimport { DddPageComponent } from './ddd-page/ddd-page.component';\r\nimport { SchedulePageComponent } from './schedule-page/schedule-page.component';\r\nimport { LetterPageComponent } from './letter-page/letter-page.component';\r\nimport { EventPageComponent } from './event-page/event-page.component';\r\nimport { JsonManagerService } from './json-manager.service';\r\nimport {\r\n  PublishDialogComponent,\r\n  CancelDialogComponent,\r\n  LoginDialogComponent,\r\n  LogoutDialogComponent,\r\n  SpinnerDialogComponent\r\n} from './dialogs/dialogs.component';\r\n\r\nconst appRoutes:Routes = [\r\n  {path: 'schedule', component: SchedulePageComponent},\r\n  {path: 'letter', component: LetterPageComponent},\r\n  {path: 'events', component: EventPageComponent},\r\n  {path: 'ddd', component: DddPageComponent},\r\n  {path: 'athletics', component: AthleticsPageComponent}\r\n]\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    AthleticsPageComponent,\r\n    DddPageComponent,\r\n    SchedulePageComponent,\r\n    LetterPageComponent,\r\n    EventPageComponent,\r\n    PublishDialogComponent,\r\n    CancelDialogComponent,\r\n    LoginDialogComponent,\r\n    LogoutDialogComponent,\r\n    SpinnerDialogComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    RouterModule.forRoot(appRoutes),\r\n    HttpClientModule,\r\n    MatButtonModule,\r\n    MatCheckboxModule,\r\n    MatToolbarModule,\r\n    MatSidenavModule,\r\n    MatListModule,\r\n    MatIconModule,\r\n    MatTableModule,\r\n    MatInputModule,\r\n    MatSelectModule,\r\n    MatNativeDateModule,\r\n    MatDatepickerModule,\r\n    MatSnackBarModule,\r\n    MatDialogModule,\r\n    MatProgressSpinnerModule,\r\n    FormsModule\r\n  ],\r\n  entryComponents:[\r\n    PublishDialogComponent,\r\n    CancelDialogComponent,\r\n    LoginDialogComponent,\r\n    LogoutDialogComponent,\r\n    SpinnerDialogComponent\r\n  ],\r\n  providers: [JsonManagerService],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2F0aGxldGljcy1wYWdlL2F0aGxldGljcy1wYWdlLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"athletics-page\\\">\\r\\n  <form class=\\\"athletic-form\\\">\\r\\n    <mat-table #table [dataSource]=\\\"dataSource\\\">\\r\\n      <ng-container matColumnDef=\\\"name\\\">\\r\\n        <mat-header-cell *matHeaderCellDef style=\\\"flex: 2\\\">Sport Name</mat-header-cell>\\r\\n        <mat-cell *matCellDef=\\\"let element\\\" style=\\\"flex: 2\\\">\\r\\n          <mat-form-field>\\r\\n            <input matInput [(ngModel)]=\\\"element.name\\\" (change)=\\\"onNameChange(element)\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n          </mat-form-field>\\r\\n        </mat-cell>\\r\\n      </ng-container>\\r\\n      <ng-container matColumnDef=\\\"url\\\">\\r\\n        <mat-header-cell *matHeaderCellDef style=\\\"flex: 2\\\">Calendar URL</mat-header-cell>\\r\\n        <mat-cell *matCellDef=\\\"let element\\\" style=\\\"flex: 2\\\">\\r\\n          <mat-form-field>\\r\\n            <input matInput type=\\\"text\\\" [(ngModel)]=\\\"element.url\\\" (change)=\\\"onUrlChange(element)\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n          </mat-form-field>\\r\\n          <button type=\\\"button\\\" (click)=\\\"removeItem(element, true)\\\" mat-icon-button *ngIf=\\\"!element.temp\\\">\\r\\n            <mat-icon>close</mat-icon>\\r\\n          </button>\\r\\n          <button type=\\\"button\\\" (click)=\\\"addItem(element, true)\\\" mat-icon-button *ngIf=\\\"element.temp\\\">\\r\\n            <mat-icon>add</mat-icon>\\r\\n          </button>\\r\\n        </mat-cell>\\r\\n      </ng-container>\\r\\n\\r\\n      <mat-header-row *matHeaderRowDef=\\\"columns\\\"></mat-header-row>\\r\\n      <mat-row *matRowDef=\\\"let row; columns: columns;\\\"></mat-row>\\r\\n    </mat-table>\\r\\n  </form>\\r\\n</div>\\r\\n\"","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { JsonManagerService} from '../json-manager.service';\r\nimport {MatTableDataSource, MatSort, MatSnackBar} from '@angular/material';\r\nimport {ErrorStateMatcher} from '@angular/material/core';\r\nimport {FormControl, FormGroupDirective, NgForm, Validators} from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-athletics-page',\r\n  templateUrl: './athletics-page.component.html',\r\n  styleUrls: ['./athletics-page.component.css'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class AthleticsPageComponent {\r\n  columns = [\"name\", \"url\"]\r\n  data = [];\r\n  dataSource = new MatTableDataSource<Element>(this.data);\r\n\r\n  constructor(private manager:JsonManagerService, public snackBar:MatSnackBar) {\r\n    this.manager.addRefreshCallback(() => this.update());\r\n  }\r\n\r\n  update(){\r\n    this.data = this.manager.athletics;\r\n    if(!this.manager.athletics[this.manager.athletics.length - 1].hasOwnProperty(\"temp\")){\r\n      let newId = this.manager.athletics[this.manager.athletics.length - 1].id + 1;\r\n      this.data.push({id:newId,name:\"\",url:\"\", temp:true});\r\n    }\r\n    this.dataSource = new MatTableDataSource<Element>(this.data);\r\n  }\r\n\r\n  getDateFromString(str){\r\n    if(!this.manager.checkDate(str)) return new Date();\r\n    return new Date(str.substring(0,4), parseInt(str.substring(4,6)) - 1, str.substring(6,8));\r\n  }\r\n\r\n  onNameChange(elem){\r\n    if(elem.temp) return false;\r\n    this.manager.change();\r\n    return true;\r\n  }\r\n\r\n  onUrlChange(elem){\r\n    if(elem.temp) return false;\r\n    this.manager.change();\r\n    return true;\r\n  }\r\n\r\n  removeItem(item){\r\n    for(var i = 0; i < this.manager.athletics.length; i++){\r\n      if(this.manager.athletics[i].id == item.id){\r\n        this.manager.athletics.splice(i, 1);\r\n        this.manager.change();\r\n        this.update();\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  addItem(item){\r\n    if(item.name != \"\" && item.url != \"\"){\r\n      delete item.temp;\r\n      this.manager.change();\r\n      this.update();\r\n      return true;\r\n    }else{\r\n      this.snackBar.open(\"Invalid options\", \"Close\", {panelClass:\"snackbar-error\", duration:3000});\r\n      return false;\r\n    }\r\n  }\r\n\r\n}\r\n\r\nclass Element {\r\n  id:number;\r\n  name:string;\r\n  url:string;\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2RkZC1wYWdlL2RkZC1wYWdlLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"ddd-page\\\">\\r\\n  <form class=\\\"ddd-form\\\">\\r\\n    <mat-table #table [dataSource]=\\\"dataSource\\\">\\r\\n      <ng-container matColumnDef=\\\"date\\\">\\r\\n        <mat-header-cell *matHeaderCellDef>Date</mat-header-cell>\\r\\n        <mat-cell *matCellDef=\\\"let element\\\">\\r\\n          <mat-form-field>\\r\\n            <input matInput [matDatepicker]=\\\"picker\\\" [value]=\\\"getDateFromString(element.date)\\\" (dateChange)=\\\"onDateChange(element, $event)\\\">\\r\\n            <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\r\\n            <mat-datepicker #picker></mat-datepicker>\\r\\n          </mat-form-field>\\r\\n        </mat-cell>\\r\\n      </ng-container>\\r\\n      <ng-container matColumnDef=\\\"type\\\">\\r\\n        <mat-header-cell *matHeaderCellDef> Type </mat-header-cell>\\r\\n        <mat-cell *matCellDef=\\\"let element\\\">\\r\\n          <mat-form-field>\\r\\n            <mat-select [(value)]=\\\"element.type\\\" (change)=\\\"onValueChange(element, $event)\\\">\\r\\n              <mat-option *ngFor=\\\"let option of typeOptions\\\" [value]=\\\"option.value\\\">{{option.title}}</mat-option>\\r\\n            </mat-select>\\r\\n          </mat-form-field>\\r\\n          <button type=\\\"button\\\" (click)=\\\"removeItem(element)\\\" mat-icon-button *ngIf=\\\"!element.temp\\\">\\r\\n            <mat-icon>close</mat-icon>\\r\\n          </button>\\r\\n          <button type=\\\"button\\\" (click)=\\\"addItem(element)\\\" mat-icon-button *ngIf=\\\"element.temp\\\">\\r\\n            <mat-icon>add</mat-icon>\\r\\n          </button>\\r\\n        </mat-cell>\\r\\n      </ng-container>\\r\\n\\r\\n      <mat-header-row *matHeaderRowDef=\\\"columns\\\"></mat-header-row>\\r\\n      <mat-row *matRowDef=\\\"let row; columns: columns;\\\"></mat-row>\\r\\n    </mat-table>\\r\\n  </form>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { ViewEncapsulation } from '@angular/core';\r\nimport { JsonManagerService} from '../json-manager.service';\r\nimport {MatTableDataSource, MatSort, MatSnackBar} from '@angular/material';\r\nimport {ErrorStateMatcher} from '@angular/material/core';\r\nimport {FormControl, FormGroupDirective, NgForm, Validators} from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-ddd-page',\r\n  templateUrl: './ddd-page.component.html',\r\n  styleUrls: ['./ddd-page.component.css'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class DddPageComponent {\r\n  columns = [\"date\", \"type\"]\r\n  data = [];\r\n  dataSource = new MatTableDataSource<Element>(this.data);\r\n  typeOptions = [\r\n    {value:\"free\", title:\"Free\"},\r\n    {value:\"charity\", title:\"DDD for Charity\"},\r\n    {value:\"fancy\", title:\"Dress up Day\"},\r\n    {value:\"spirit\", title:\"Spirit Day\"},\r\n  ];\r\n  constructor(private manager:JsonManagerService, public snackBar:MatSnackBar) {\r\n    this.manager.addRefreshCallback(() => this.update());\r\n  }\r\n\r\n  update(){\r\n    this.data = [];\r\n    for(let i in this.manager.json.ddd){\r\n      if(this.manager.json.ddd.hasOwnProperty(i)){\r\n        this.data.push({\"date\":i, \"type\":this.manager.json.ddd[i]});\r\n      }\r\n    }\r\n    this.data.push({\"date\":this.manager.dateToDayString(new Date()), \"type\":\"\", \"temp\":true})\r\n    this.dataSource = new MatTableDataSource<Element>(this.data);\r\n    console.log(this.data);\r\n  }\r\n\r\n  onDateChange(elem, event){\r\n    var str = this.manager.dateToDayString(event.value);\r\n    if(elem.temp){\r\n      elem.date = str;\r\n    }else{\r\n      if(this.manager.json.ddd.hasOwnProperty(str)){\r\n        this.snackBar.open(\"That date already exists!\", \"Close\", {panelClass:\"snackbar-error\", duration:3000});\r\n      }else{\r\n        delete this.manager.json.ddd[elem.date];\r\n        this.manager.json.ddd[str] = elem.type;\r\n        this.manager.change();\r\n        this.update();\r\n      }\r\n    }\r\n  }\r\n\r\n  getDateFromString(str){\r\n    if(!this.manager.checkDate(str)) return new Date();\r\n    return new Date(str.substring(0,4), parseInt(str.substring(4,6)) - 1, str.substring(6,8));\r\n  }\r\n\r\n  onValueChange(elem, event){\r\n    if(elem.temp) return;\r\n    this.manager.json.ddd[elem.date] = event.value;\r\n    this.manager.change();\r\n  }\r\n\r\n  removeItem(item){\r\n    delete this.manager.json.ddd[item.date];\r\n    this.manager.change();\r\n    this.update();\r\n  }\r\n\r\n  addItem(item){\r\n    if(this.manager.json.ddd.hasOwnProperty(item.date)){\r\n      this.snackBar.open(\"This date already exists\", \"Close\", {panelClass:\"snackbar-error\", duration:3000})\r\n    }else if(this.manager.checkDate(item.date) && item.type != \"\"){\r\n      this.manager.json.ddd[item.date] = item.type;\r\n      this.update();\r\n      this.manager.change();\r\n    }else{\r\n      this.snackBar.open(\"Invalid options\", \"Close\", {panelClass:\"snackbar-error\", duration:3000});\r\n    }\r\n  }\r\n}\r\n\r\nexport interface Element {\r\n  date:string;\r\n  type:string;\r\n}\r\n","module.exports = \"<h1 mat-dialog-title>Are you sure you want to discard your changes?</h1>\\r\\n<div mat-dialog-actions>\\r\\n  <button mat-button color=\\\"primary\\\" [mat-dialog-close]=\\\"false\\\">No</button>\\r\\n  <button mat-raised-button color=\\\"warn\\\" [mat-dialog-close]=\\\"true\\\">Yes</button>\\r\\n</div>\\r\\n\"","import { Component, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA, MatSnackBar } from '@angular/material';\r\n\r\n@Component({\r\n  selector:'spinner-dialog',\r\n  templateUrl:'./spinner-dialog.html'\r\n})\r\nexport class SpinnerDialogComponent {}\r\n\r\n@Component({\r\n  selector:'publish-dialog',\r\n  templateUrl:'./publish-dialog.html'\r\n})\r\nexport class PublishDialogComponent {}\r\n\r\n@Component({\r\n  selector:'cancel-dialog',\r\n  templateUrl:'./cancel-dialog.html'\r\n})\r\nexport class CancelDialogComponent {}\r\n\r\n@Component({\r\n  selector:'logout-dialog',\r\n  templateUrl:'./logout-dialog.html'\r\n})\r\nexport class LogoutDialogComponent {}\r\n\r\n@Component({\r\n  selector:'login-dialog',\r\n  templateUrl:'./login-dialog.html'\r\n})\r\nexport class LoginDialogComponent {\r\n  key:string = \"\";\r\n  constructor(public dialogRef: MatDialogRef<LoginDialogComponent>, @Inject(MAT_DIALOG_DATA) public data: any, private snackbar:MatSnackBar){}\r\n  close(){\r\n    this.data.validate(this.key, (res) => {\r\n      if(res){\r\n        this.dialogRef.close(this.key);\r\n      }else{\r\n        this.snackbar.open(\"Invalid Key!\", \"Close\", {panelClass:\"snackbar-error\", duration:3000});\r\n      }\r\n    });\r\n  }\r\n}\r\n","module.exports = \"<h1 mat-dialog-title>Please enter a valid API key:</h1>\\r\\n<div mat-dialog-content>\\r\\n  <mat-form-field>\\r\\n    <input matInput [(ngModel)]=\\\"key\\\">\\r\\n  </mat-form-field>\\r\\n</div>\\r\\n<div>\\r\\n  <button mat-raised-button color=\\\"primary\\\" (click)=\\\"close()\\\">Submit</button>\\r\\n</div>\\r\\n\"","module.exports = \"<h1 mat-dialog-title>Are you want to log out?</h1>\\r\\n<div mat-dialog-actions>\\r\\n  <button mat-button color=\\\"primary\\\" [mat-dialog-close]=\\\"false\\\">No</button>\\r\\n  <button mat-raised-button color=\\\"primary\\\" [mat-dialog-close]=\\\"true\\\">Yes</button>\\r\\n</div>\\r\\n\"","module.exports = \"<h1 mat-dialog-title>Are you sure you want to publish?</h1>\\r\\n<div mat-dialog-actions>\\r\\n  <button mat-button color=\\\"primary\\\" [mat-dialog-close]=\\\"false\\\">No</button>\\r\\n  <button mat-raised-button color=\\\"warn\\\" [mat-dialog-close]=\\\"true\\\">Yes</button>\\r\\n</div>\\r\\n\"","module.exports = \"<mat-progress-spinner color=\\\"accent\\\" mode=\\\"indeterminate\\\"></mat-progress-spinner>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2V2ZW50LXBhZ2UvZXZlbnQtcGFnZS5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"event-page\\\">\\r\\n  <form class=\\\"ct-form\\\" style=\\\"margin-top:20px\\\">\\r\\n    <h2 class=\\\"mat-h2\\\" style=\\\"padding:5px 30px\\\">Community Time Events</h2>\\r\\n    <mat-table #table [dataSource]=\\\"ctDataSource\\\">\\r\\n      <ng-container matColumnDef=\\\"date\\\">\\r\\n        <mat-header-cell *matHeaderCellDef> Date </mat-header-cell>\\r\\n        <mat-cell *matCellDef=\\\"let element\\\">\\r\\n          <mat-form-field>\\r\\n            <input matInput [matDatepicker]=\\\"picker\\\" [value]=\\\"getDateFromString(element.date)\\\" (dateChange)=\\\"onDateChange(element, $event, true)\\\">\\r\\n            <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\r\\n            <mat-datepicker #picker></mat-datepicker>\\r\\n          </mat-form-field>\\r\\n        </mat-cell>\\r\\n      </ng-container>\\r\\n      <ng-container matColumnDef=\\\"event\\\">\\r\\n        <mat-header-cell *matHeaderCellDef>Event</mat-header-cell>\\r\\n        <mat-cell *matCellDef=\\\"let element\\\">\\r\\n          <mat-form-field>\\r\\n            <input matInput type=\\\"text\\\" [(ngModel)]=\\\"element.event\\\" (change)=\\\"onValueChange(element, $event, true)\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n          </mat-form-field>\\r\\n          <button type=\\\"button\\\" (click)=\\\"removeItem(element, true)\\\" mat-icon-button *ngIf=\\\"!element.temp\\\">\\r\\n            <mat-icon>close</mat-icon>\\r\\n          </button>\\r\\n          <button type=\\\"button\\\" (click)=\\\"addItem(element, true)\\\" mat-icon-button *ngIf=\\\"element.temp\\\">\\r\\n            <mat-icon>add</mat-icon>\\r\\n          </button>\\r\\n        </mat-cell>\\r\\n      </ng-container>\\r\\n\\r\\n      <mat-header-row *matHeaderRowDef=\\\"columns\\\"></mat-header-row>\\r\\n      <mat-row *matRowDef=\\\"let row; columns: columns;\\\"></mat-row>\\r\\n    </mat-table>\\r\\n  </form>\\r\\n  <form class=\\\"cp-form\\\" style=\\\"margin-top:40px\\\">\\r\\n    <h2 class=\\\"mat-h2\\\" style=\\\"padding:5px 30px\\\">Conference Period Events</h2>\\r\\n    <mat-table #table [dataSource]=\\\"cpDataSource\\\">\\r\\n      <ng-container matColumnDef=\\\"date\\\">\\r\\n        <mat-header-cell *matHeaderCellDef> Date </mat-header-cell>\\r\\n        <mat-cell *matCellDef=\\\"let element\\\">\\r\\n          <mat-form-field>\\r\\n            <input matInput [matDatepicker]=\\\"picker\\\" [value]=\\\"getDateFromString(element.date)\\\" (dateChange)=\\\"onDateChange(element, $event, false)\\\">\\r\\n            <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\r\\n            <mat-datepicker #picker></mat-datepicker>\\r\\n          </mat-form-field>\\r\\n        </mat-cell>\\r\\n      </ng-container>\\r\\n      <ng-container matColumnDef=\\\"event\\\">\\r\\n        <mat-header-cell *matHeaderCellDef>Event</mat-header-cell>\\r\\n        <mat-cell *matCellDef=\\\"let element\\\">\\r\\n          <mat-form-field>\\r\\n            <input matInput type=\\\"text\\\" [(ngModel)]=\\\"element.event\\\" (change)=\\\"onValueChange(element, $event, false)\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n          </mat-form-field>\\r\\n          <button type=\\\"button\\\" (click)=\\\"removeItem(element, false)\\\" mat-icon-button *ngIf=\\\"!element.temp\\\">\\r\\n            <mat-icon>close</mat-icon>\\r\\n          </button>\\r\\n          <button type=\\\"button\\\" (click)=\\\"addItem(element, false)\\\" mat-icon-button *ngIf=\\\"element.temp\\\">\\r\\n            <mat-icon>add</mat-icon>\\r\\n          </button>\\r\\n        </mat-cell>\\r\\n      </ng-container>\\r\\n\\r\\n      <mat-header-row *matHeaderRowDef=\\\"columns\\\"></mat-header-row>\\r\\n      <mat-row *matRowDef=\\\"let row; columns: columns;\\\"></mat-row>\\r\\n    </mat-table>\\r\\n  </form>\\r\\n</div>\\r\\n\"","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { JsonManagerService} from '../json-manager.service';\r\nimport {MatTableDataSource, MatSort, MatSnackBar} from '@angular/material';\r\nimport {ErrorStateMatcher} from '@angular/material/core';\r\nimport {FormControl, FormGroupDirective, NgForm, Validators} from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-event-page',\r\n  templateUrl: './event-page.component.html',\r\n  styleUrls: ['./event-page.component.css'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class EventPageComponent {\r\n  columns = [\"date\", \"event\"]\r\n  cpData = [];\r\n  cpDataSource = new MatTableDataSource<Element>(this.cpData);\r\n  ctData = [];\r\n  ctDataSource = new MatTableDataSource<Element>(this.cpData);\r\n  constructor(private manager:JsonManagerService, public snackBar:MatSnackBar) {\r\n    this.manager.addRefreshCallback(() => this.update());\r\n  }\r\n\r\n  update(){\r\n    this.ctData = [];\r\n    for(let i in this.manager.json.eventsOverride.CT){\r\n      if(this.manager.json.eventsOverride.CT.hasOwnProperty(i)){\r\n        this.ctData.push({\"date\":i, \"event\":this.manager.json.eventsOverride.CT[i]});\r\n      }\r\n    }\r\n    this.ctData.push({\"date\":this.manager.dateToDayString(new Date()), \"event\":\"\", \"temp\":true})\r\n    this.ctDataSource = new MatTableDataSource<Element>(this.ctData);\r\n\r\n    this.cpData = [];\r\n    for(let i in this.manager.json.eventsOverride.CP){\r\n      if(this.manager.json.eventsOverride.CP.hasOwnProperty(i)){\r\n        this.cpData.push({\"date\":i, \"event\":this.manager.json.eventsOverride.CP[i]});\r\n      }\r\n    }\r\n    this.cpData.push({\"date\":this.manager.dateToDayString(new Date()), \"event\":\"\", \"temp\":true})\r\n    this.cpDataSource = new MatTableDataSource<Element>(this.cpData);\r\n  }\r\n\r\n  onDateChange(elem, event, isCT){\r\n    var str = this.manager.dateToDayString(event.value);\r\n    if(elem.temp){\r\n      elem.date = str;\r\n      return true;\r\n    }else{\r\n      if((isCT && this.manager.json.eventsOverride.CT.hasOwnProperty(str)) || (!isCT && this.manager.json.eventsOverride.CP.hasOwnProperty(str))){\r\n        this.snackBar.open(\"That date already exists!\", \"Close\", {panelClass:\"snackbar-error\", duration:3000});\r\n        return false;\r\n      }else if(elem.event == \"\"){\r\n        this.snackBar.open(\"Please add an event name\", \"Close\", {panelClass:\"snackbar-error\", duration:3000});\r\n        return false;\r\n      }else{\r\n        if(isCT){\r\n          delete this.manager.json.eventsOverride.CT[elem.date];\r\n          this.manager.json.eventsOverride.CT[str] = elem.event;\r\n        }else{\r\n          delete this.manager.json.eventsOverride.CP[elem.date];\r\n          this.manager.json.eventsOverride.CP[str] = elem.event;\r\n        }\r\n        this.manager.change();\r\n        this.update();\r\n        return true;\r\n      }\r\n    }\r\n  }\r\n\r\n  getDateFromString(str){\r\n    if(!this.manager.checkDate(str)) return new Date();\r\n    return new Date(str.substring(0,4), parseInt(str.substring(4,6)) - 1, str.substring(6,8));\r\n  }\r\n\r\n  onValueChange(elem, event, isCT){\r\n    if(elem.temp) return;\r\n    if(isCT) this.manager.json.eventsOverride.CT[elem.date] = event.value;\r\n    else this.manager.json.eventsOverride.CP[elem.date] = event.value;\r\n    this.manager.change();\r\n  }\r\n\r\n  removeItem(item, isCT){\r\n    if(isCT) delete this.manager.json.eventsOverride.CT[item.date];\r\n    else delete this.manager.json.eventsOverride.CP[item.date];\r\n    this.manager.change();\r\n    this.update();\r\n  }\r\n\r\n  addItem(item, isCT){\r\n    if((isCT && this.manager.json.eventsOverride.CT.hasOwnProperty(item.date)) || (!isCT && this.manager.json.eventsOverride.CP.hasOwnProperty(item.date))){\r\n      this.snackBar.open(\"This date already exists\", \"Close\", {panelClass:\"snackbar-error\", duration:3000})\r\n    }else if(this.manager.checkDate(item.date) && item.event != \"\"){\r\n      if(isCT) this.manager.json.eventsOverride.CT[item.date] = item.event;\r\n      else this.manager.json.eventsOverride.CP[item.date] = item.event;\r\n      this.update();\r\n      this.manager.change();\r\n    }else{\r\n      this.snackBar.open(\"Please add an event name\", \"Close\", {panelClass:\"snackbar-error\", duration:3000});\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable()\r\nexport class JsonManagerService {\r\n  json:any = {};\r\n  scheduleTypes:any = [];\r\n  athletics:any = [];\r\n  changed:boolean = false;\r\n  apiKey:string = \"\";\r\n\r\n  private refreshing:number = 2;\r\n  private refreshCallbacks = [];\r\n  constructor(private http:HttpClient) {\r\n    this.apiKey = localStorage.getItem(\"apiKey\") || \"\";\r\n  }\r\n\r\n  isValidKey(key, callback){\r\n    if(key==\"\") return callback(false);\r\n    this.http.get(\"/testPermission?permission=admin&api_key=\"+key, {responseType: 'text'}).subscribe((res) => callback(true), (res) => callback(false));\r\n  }\r\n\r\n  hasValidKey(callback){\r\n    this.isValidKey(this.apiKey, callback);\r\n  }\r\n\r\n  addRefreshCallback(callback){\r\n    this.refreshCallbacks.push(callback);\r\n    if(!this.isRefreshing()){\r\n      callback();\r\n    }\r\n  }\r\n\r\n  saveKey(){\r\n    localStorage.setItem(\"apiKey\", this.apiKey);\r\n  }\r\n\r\n  dateToDayString(d:Date):string{\r\n    return \"\"+d.getFullYear()+(d.getMonth()+1<10?\"0\":\"\")+(d.getMonth()+1)+(d.getDate()<10?\"0\":\"\")+d.getDate();\r\n  }\r\n\r\n  change(){\r\n    this.changed = true;\r\n  }\r\n\r\n  private checkDoneRefreshing(){\r\n    if(this.isRefreshing()) return false;\r\n    for(var i = 0; i < this.refreshCallbacks.length; i++){\r\n      this.refreshCallbacks[i]();\r\n    }\r\n  }\r\n\r\n  isRefreshing(){\r\n    return this.refreshing > 0;\r\n  }\r\n\r\n  refresh(){\r\n    this.refreshing = 3;\r\n    this.http.get(\"/v1/override?api_key=\"+this.apiKey).subscribe(res => {\r\n      this.json = res;\r\n      this.refreshing--;\r\n      this.checkDoneRefreshing();\r\n    }, err => {if(err.status == 401){this.apiKey = \"\"; this.saveKey();}});\r\n    this.http.get(\"/v1/schedule/types?api_key=\"+this.apiKey).subscribe(res => {\r\n      this.scheduleTypes = res;\r\n      this.refreshing--;\r\n      this.checkDoneRefreshing();\r\n    }, err => {if(err.status == 401){this.apiKey = \"\"; this.saveKey();}});\r\n    this.http.get(\"/v1/athletics/calendarList?api_key=\"+this.apiKey).subscribe(res => {\r\n      this.athletics = res;\r\n      this.refreshing--;\r\n      this.checkDoneRefreshing();\r\n    });\r\n    this.changed = false;\r\n  }\r\n\r\n  checkDate(date){\r\n    if(parseInt(date) != NaN && (\"\"+parseInt(date)).length==8){\r\n      if(date.substring(0,2) == \"20\" || date.substring(0,2) == \"21\"){\r\n        var month = parseInt(date.substring(4,6));\r\n        if(month > 0 && month <= 12) {\r\n          var d;\r\n          try {\r\n            d = new Date(date.substring(0, 4), month - 1, date.substring(6,8));\r\n          }catch(e){\r\n            return false;\r\n          }\r\n          return true;\r\n        }\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  saveJson(callback){\r\n    let saving = 2;\r\n    let afterUpdate = (res) => {\r\n      if(res){\r\n        saving--;\r\n      }\r\n      if(saving == 0){\r\n        this.http.get(\"/v1/forceRefresh?api_key=\"+this.apiKey, {responseType:\"text\"}).subscribe(res => {\r\n          callback(res);\r\n          this.refresh();\r\n        })\r\n      }\r\n    }\r\n\r\n    console.log(JSON.stringify(this.athletics));\r\n    if(this.athletics[this.athletics.length - 1].hasOwnProperty(\"temp\")){\r\n      this.athletics.pop();\r\n    }\r\n    this.http.post(\"/v1/updateOverride?api_key=\"+this.apiKey, {newJSON:JSON.stringify(this.json)}, {responseType:\"text\"}).subscribe(\r\n      res => afterUpdate(true), res => afterUpdate(false));\r\n    this.http.post(\"/v1/updateAthletics?api_key=\"+this.apiKey, {newJSON:JSON.stringify(this.athletics)}, {responseType:\"text\"}).subscribe(\r\n      res => afterUpdate(true), res => afterUpdate(false));\r\n  }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xldHRlci1wYWdlL2xldHRlci1wYWdlLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"letter-page\\\">\\r\\n  <form class=\\\"letter-form\\\">\\r\\n    <mat-table #table [dataSource]=\\\"dataSource\\\">\\r\\n      <ng-container matColumnDef=\\\"date\\\">\\r\\n        <mat-header-cell *matHeaderCellDef>Date</mat-header-cell>\\r\\n        <mat-cell *matCellDef=\\\"let element\\\">\\r\\n          <mat-form-field>\\r\\n            <input matInput [matDatepicker]=\\\"picker\\\" [value]=\\\"getDateFromString(element.date)\\\" (dateChange)=\\\"onDateChange(element, $event)\\\">\\r\\n            <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\r\\n            <mat-datepicker #picker></mat-datepicker>\\r\\n          </mat-form-field>\\r\\n        </mat-cell>\\r\\n      </ng-container>\\r\\n      <ng-container matColumnDef=\\\"letter\\\">\\r\\n        <mat-header-cell *matHeaderCellDef>Letter</mat-header-cell>\\r\\n        <mat-cell *matCellDef=\\\"let element\\\">\\r\\n          <mat-form-field>\\r\\n            <mat-select [(value)]=\\\"element.letter\\\" (change)=\\\"onValueChange(element)\\\">\\r\\n              <mat-option *ngFor=\\\"let option of letterOptions\\\" [value]=\\\"option.value\\\">{{option.title}}</mat-option>\\r\\n            </mat-select>\\r\\n          </mat-form-field>\\r\\n          <button type=\\\"button\\\" (click)=\\\"removeItem(element)\\\" mat-icon-button *ngIf=\\\"!element.temp\\\">\\r\\n            <mat-icon>close</mat-icon>\\r\\n          </button>\\r\\n          <button type=\\\"button\\\" (click)=\\\"addItem(element)\\\" mat-icon-button *ngIf=\\\"element.temp\\\">\\r\\n            <mat-icon>add</mat-icon>\\r\\n          </button>\\r\\n        </mat-cell>\\r\\n      </ng-container>\\r\\n\\r\\n      <mat-header-row *matHeaderRowDef=\\\"columns\\\"></mat-header-row>\\r\\n      <mat-row *matRowDef=\\\"let row; columns: columns;\\\"></mat-row>\\r\\n    </mat-table>\\r\\n  </form>\\r\\n</div>\\r\\n\"","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { JsonManagerService } from '../json-manager.service';\r\nimport {MatTableDataSource, MatSort, MatSnackBar} from '@angular/material';\r\nimport {ErrorStateMatcher} from '@angular/material/core';\r\nimport {FormControl, FormGroupDirective, NgForm, Validators} from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-letter-page',\r\n  templateUrl: './letter-page.component.html',\r\n  styleUrls: ['./letter-page.component.css'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class LetterPageComponent {\r\n  columns = [\"date\", \"letter\"]\r\n  data = [];\r\n  dataSource = new MatTableDataSource<Element>(this.data);\r\n  letterOptions = [\r\n    {value:\"A\", title:\"A\"},\r\n    {value:\"B\", title:\"B\"},\r\n    {value:\"C\", title:\"C\"},\r\n    {value:\"D\", title:\"D\"},\r\n    {value:\"E\", title:\"E\"},\r\n    {value:\"F\", title:\"F\"},\r\n    {value:\"G\", title:\"G\"},\r\n    {value:\"R\", title:\"Review Day\"}\r\n  ];\r\n  constructor(private manager:JsonManagerService, public snackBar:MatSnackBar) {\r\n    this.manager.addRefreshCallback(() => this.update());\r\n  }\r\n\r\n  update(){\r\n    this.data = [];\r\n    for(let i in this.manager.json.letterOverride){\r\n      if(this.manager.json.letterOverride.hasOwnProperty(i)){\r\n        this.data.push({\"date\":i, \"letter\":this.manager.json.letterOverride[i]});\r\n      }\r\n    }\r\n    this.data.push({\"date\":this.manager.dateToDayString(new Date()), \"letter\":\"\", \"temp\":true})\r\n    this.dataSource = new MatTableDataSource<Element>(this.data);\r\n    console.log(this.data);\r\n  }\r\n\r\n  onDateChange(elem, event){\r\n    var str = this.manager.dateToDayString(event.value);\r\n    if(elem.temp){\r\n      elem.date = str;\r\n      return true;\r\n    }else{\r\n      if(this.manager.json.letterOverride.hasOwnProperty(str)){\r\n        this.snackBar.open(\"That date already exists!\", \"Close\", {panelClass:\"snackbar-error\", duration:3000});\r\n        return false;\r\n      }else{\r\n        delete this.manager.json.letterOverride[elem.date];\r\n        this.manager.json.letterOverride[str] = elem.letter;\r\n        this.manager.change();\r\n        this.update();\r\n        return true;\r\n      }\r\n    }\r\n  }\r\n\r\n  getDateFromString(str){\r\n    if(!this.manager.checkDate(str)) return new Date();\r\n    return new Date(str.substring(0,4), parseInt(str.substring(4,6)) - 1, str.substring(6,8));\r\n  }\r\n\r\n  onValueChange(elem){\r\n    console.log(elem);\r\n    if(elem.temp) return;\r\n    this.manager.json.letterOverride[elem.date] = elem.letter;\r\n    this.manager.change();\r\n  }\r\n\r\n\r\n  removeItem(item){\r\n    delete this.manager.json.letterOverride[item.date];\r\n    this.manager.change();\r\n    this.update();\r\n  }\r\n\r\n  addItem(item){\r\n    if(this.manager.json.letterOverride.hasOwnProperty(item.date)){\r\n      this.snackBar.open(\"This date already exists\", \"Close\", {panelClass:\"snackbar-error\", duration:3000})\r\n    }else if(this.manager.checkDate(item.date) && item.letter != \"\"){\r\n      this.manager.json.letterOverride[item.date] = item.letter;\r\n      this.update();\r\n      this.manager.change();\r\n    }else {\r\n      this.snackBar.open(\"Invalid options\", \"Close\", {panelClass:\"snackbar-error\", duration:3000});\r\n    }\r\n  }\r\n\r\n  ngOnInit(){}\r\n}\r\n\r\nexport interface Element {\r\n  date:string;\r\n  letter:string;\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NjaGVkdWxlLXBhZ2Uvc2NoZWR1bGUtcGFnZS5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"schedule-page\\\">\\r\\n  <form class=\\\"schedule-form\\\">\\r\\n    <mat-table #table [dataSource]=\\\"dataSource\\\">\\r\\n      <ng-container matColumnDef=\\\"date\\\">\\r\\n        <mat-header-cell *matHeaderCellDef>Date</mat-header-cell>\\r\\n        <mat-cell *matCellDef=\\\"let element\\\">\\r\\n          <mat-form-field>\\r\\n            <input matInput [matDatepicker]=\\\"picker\\\" [value]=\\\"getDateFromString(element.date)\\\" (dateChange)=\\\"onDateChange(element, $event)\\\">\\r\\n            <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\r\\n            <mat-datepicker #picker></mat-datepicker>\\r\\n          </mat-form-field>\\r\\n        </mat-cell>\\r\\n      </ng-container>\\r\\n      <ng-container matColumnDef=\\\"type\\\">\\r\\n        <mat-header-cell *matHeaderCellDef>Type</mat-header-cell>\\r\\n        <mat-cell *matCellDef=\\\"let element\\\">\\r\\n          <mat-form-field>\\r\\n            <mat-select [(ngModel)]=\\\"element.type\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n              <mat-option value=\\\"automatic\\\">Automatic</mat-option>\\r\\n              <mat-option value=\\\"manual\\\">Manual</mat-option>\\r\\n            </mat-select>\\r\\n          </mat-form-field>\\r\\n        </mat-cell>\\r\\n      </ng-container>\\r\\n      <ng-container matColumnDef=\\\"value\\\">\\r\\n        <mat-header-cell *matHeaderCellDef style=\\\"flex: 2;\\\">Value</mat-header-cell>\\r\\n        <mat-cell *matCellDef=\\\"let element\\\" style=\\\"flex: 2;\\\">\\r\\n          <mat-form-field *ngIf=\\\"element.type == 'automatic'\\\">\\r\\n            <mat-select  [(ngModel)]=\\\"element.name\\\" [ngModelOptions]=\\\"{standalone: true}\\\" (change)=\\\"onValueChange(element, $event)\\\">\\r\\n              <mat-option *ngFor=\\\"let option of scheduleOptions\\\" [value]=\\\"option\\\">{{option}}</mat-option>\\r\\n            </mat-select>\\r\\n          </mat-form-field>\\r\\n          <mat-form-field *ngIf=\\\"element.type == 'manual'\\\" style=\\\"width: calc(100% - 50px)\\\">\\r\\n            <textarea matInput [(ngModel)]=\\\"element.classes\\\" [ngModelOptions]=\\\"{standalone: true}\\\" (change)=\\\"onValueChange(element, $event)\\\"></textarea>\\r\\n          </mat-form-field>\\r\\n          <button type=\\\"button\\\" (click)=\\\"removeItem(element)\\\" style=\\\"float:right\\\" mat-icon-button *ngIf=\\\"!element.temp\\\">\\r\\n            <mat-icon>close</mat-icon>\\r\\n          </button>\\r\\n          <button type=\\\"button\\\" (click)=\\\"addItem(element)\\\" style=\\\"float:right\\\" mat-icon-button *ngIf=\\\"element.temp\\\">\\r\\n            <mat-icon>add</mat-icon>\\r\\n          </button>\\r\\n        </mat-cell>\\r\\n      </ng-container>\\r\\n\\r\\n      <mat-header-row *matHeaderRowDef=\\\"columns\\\"></mat-header-row>\\r\\n      <mat-row *matRowDef=\\\"let row; columns: columns;\\\"></mat-row>\\r\\n    </mat-table>\\r\\n  </form>\\r\\n</div>\\r\\n\"","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { JsonManagerService } from '../json-manager.service';\r\nimport {MatTableDataSource, MatSort, MatSnackBar} from '@angular/material';\r\nimport {ErrorStateMatcher} from '@angular/material/core';\r\nimport {FormControl, FormGroupDirective, NgForm, Validators} from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-schedule-page',\r\n  templateUrl: './schedule-page.component.html',\r\n  styleUrls: ['./schedule-page.component.css'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class SchedulePageComponent {\r\n  data = [];\r\n  scheduleOptions = [];\r\n  dataSource = new MatTableDataSource(this.data);\r\n  columns=[\"date\",\"type\",\"value\"]\r\n  constructor(private manager:JsonManagerService, public snackBar:MatSnackBar) {\r\n    this.manager.addRefreshCallback(() => this.update());\r\n  }\r\n\r\n  update(){\r\n    this.data = [];\r\n    for(var i in this.manager.scheduleTypes){\r\n      this.scheduleOptions.push(this.manager.scheduleTypes[i].name);\r\n    }\r\n    for(var i in this.manager.json.scheduleOverride){\r\n      if(this.manager.json.scheduleOverride.hasOwnProperty(i)){\r\n        var obj = JSON.parse(JSON.stringify(this.manager.json.scheduleOverride[i]));\r\n        obj.date = i;\r\n        if(obj.classes){\r\n          obj.classes = JSON.stringify(obj.classes);\r\n        }\r\n        this.data.push(obj);\r\n      }\r\n    }\r\n    this.data.push({date:this.manager.dateToDayString(new Date()), type:'', temp:true});\r\n    console.log(this.data);\r\n    this.dataSource = new MatTableDataSource(this.data);\r\n  }\r\n\r\n  onDateChange(elem, event){\r\n    var str = this.manager.dateToDayString(event.value);\r\n    if(elem.temp){\r\n      elem.date = str;\r\n    }else{\r\n      if(this.manager.json.scheduleOverride.hasOwnProperty(str)){\r\n        this.snackBar.open(\"That date already exists!\", \"Close\", {panelClass:\"snackbar-error\", duration:3000});\r\n      }else if(elem.type == \"automatic\"){\r\n        if(elem.name != \"\"){\r\n          delete this.manager.json.scheduleOverride[elem.date];\r\n          this.manager.json.scheduleOverride[str] = {type:elem.type, name:elem.name};\r\n          this.update();\r\n          this.manager.change();\r\n        }\r\n      }else if(elem.type == \"manual\"){\r\n        try{\r\n          let classes = JSON.parse(elem.classes);\r\n          delete this.manager.json.scheduleOverride[elem.date];\r\n          this.manager.json.scheduleOverride[str] = {type:elem.type, classes}\r\n          this.update();\r\n          this.manager.change();\r\n        }catch(e){\r\n          console.log(\"JSON parsing error: \", e);\r\n          this.snackBar.open(\"Invalid custom schedule JSON\", \"Close\", {panelClass:\"snackbar-error\", duration:3000});\r\n        }\r\n      }else{\r\n        this.snackBar.open(\"Invalid type\", \"Close\", {panelClass:\"snackbar-error\", duration:3000});\r\n      }\r\n    }\r\n  }\r\n\r\n  getDateFromString(str){\r\n    if(!this.manager.checkDate(str)) return new Date();\r\n    return new Date(str.substring(0,4), parseInt(str.substring(4,6)) - 1, str.substring(6,8));\r\n  }\r\n\r\n  onValueChange(elem){\r\n    if(!elem.temp){\r\n      if(elem.type == \"automatic\"){\r\n        if(elem.name != \"\"){\r\n          this.manager.json.scheduleOverride[elem.date] = {type:elem.type, name:elem.name};\r\n          this.update();\r\n          this.manager.change();\r\n          return true;\r\n        }else{\r\n          this.snackBar.open(\"Please add a name\", \"Close\", {panelClass:\"snackbar-error\", duration:3000});\r\n          return false;\r\n        }\r\n      }else if(elem.type == \"manual\"){\r\n        try{\r\n          let classes = JSON.parse(elem.classes);\r\n          this.manager.json.scheduleOverride[elem.date] = {type:elem.type, classes}\r\n          this.update();\r\n          this.manager.change();\r\n          return true;\r\n        }catch(e){\r\n          console.log(\"JSON parsing error: \", e);\r\n          this.snackBar.open(\"Invalid custom schedule JSON\", \"Close\", {panelClass:\"snackbar-error\", duration:3000});\r\n          return false;\r\n        }\r\n      }else{\r\n        this.snackBar.open(\"Invalid type\", \"Close\", {panelClass:\"snackbar-error\", duration:3000});\r\n        return false;\r\n      }\r\n    }\r\n    this.snackBar.open(\"Error adding\", \"Close\", {panelClass:\"snackbar-error\", duration:3000});\r\n    return false;\r\n  }\r\n\r\n  removeItem(item){\r\n    delete this.manager.json.scheduleOverride[item.date];\r\n    this.manager.change();\r\n    this.update();\r\n  }\r\n\r\n  addItem(item){\r\n    if(this.manager.json.scheduleOverride.hasOwnProperty(item.date)){\r\n      this.snackBar.open(\"This date already exists\", \"Close\", {panelClass:\"snackbar-error\", duration:3000})\r\n    }else if(this.manager.checkDate(item.date) && item.type != \"\"){\r\n      if(item.type == \"automatic\"){\r\n        if(item.name != \"\"){\r\n          this.manager.json.scheduleOverride[item.date] = {type:item.type, name:item.name};\r\n          this.update();\r\n          this.manager.change();\r\n        }else{\r\n          this.snackBar.open(\"Choose \", \"Close\", {panelClass:\"snackbar-error\", duration:3000})\r\n        }\r\n      }else if(item.type == \"manual\"){\r\n        try{\r\n          let classes = JSON.parse(item.classes);\r\n          this.manager.json.scheduleOverride[item.date] = {type:item.type, classes}\r\n          this.update();\r\n          this.manager.change();\r\n        }catch(e){\r\n          console.log(\"JSON parsing error: \", e);\r\n          this.snackBar.open(\"Invalid custom schedule JSON\", \"Close\", {panelClass:\"snackbar-error\", duration:3000});\r\n        }\r\n      }else{\r\n        this.snackBar.open(\"Please enter a schedule type\", \"Close\", {panelClass:\"snackbar-error\", duration:3000})\r\n      }\r\n    }else {\r\n      this.snackBar.open(\"Invalid type\", \"Close\", {panelClass:\"snackbar-error\", duration:3000});\r\n    }\r\n  }\r\n\r\n}\r\n","// The file contents for the current environment will overwrite these during build.\r\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\r\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\r\n// The list of which env maps to which file can be found in `.angular-cli.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\nimport 'hammerjs';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n"],"sourceRoot":""}